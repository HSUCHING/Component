
swagger: '2.0'
info:
  version: 1.0.0
  title: koa-oai-router example
consumes:
  - application/json
produces:
  - application/json
basePath: /api
paths:
  /user/{userId}:
    get:
      tags:
        - User
      description: find a user by userId
      x-oai-cache:
        expire: 86400
      x-oai-controller:
        - file: people
          handler: get
      parameters:
        - name: token
          in: header
          type: string
          required: true
          pattern: token.*
          description: token in http header.
        - name: userId
          in: path
          required: true
          type: number
          format: int32
      responses:
        200:
          description: user's info
          schema:
            $ref: '#/definitions/User'
        default:
          description: unexpected error
          schema:
            $ref: '#/definitions/Error'
    post:
      tags:
        - User
      description: input a user's info
      x-oai-controller:
        - file: people
          handler: post
      parameters:
        - name: token
          in: header
          type: string
          required: true
          pattern: token.*
          description: token in http header.
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/User'
      responses:
        200:
          description: user's info
          schema:
            $ref: '#/definitions/User'
        default:
          description: unexpected error
          schema:
            $ref: '#/definitions/Error'

  /users:
    get:
      tags:
        - User
      description: find users by name,sex,height,weight
      x-oai-controller:
        - file: people
          handler: get
      parameters:
        - name: token
          in: header
          type: string
          required: true
          pattern: token.*
          description: token in http header.
        - name: name
          in: query
          required: true
          type: string
        - name: sex
          in: query
          required: false
          type: string
          default: male
          enum:
            - male
            - female
        - name: height
          in: query
          type: number
          required: true
          format: float
          maximum: 100
          minimum: 10
        - name: weight
          in: query
          type: number
          required: true
          format: float
          maximum: 100
          minimum: 10
      responses:
        200:
          description: user's info
          schema:
            $ref: '#/definitions/User'
        default:
          description: unexpected error
          schema:
            $ref: '#/definitions/Error'

  "/empty-query":
    get:
      summary:
      x-oai-controller:
        - file: people
          handler: get
      parameters:
      responses:
        default:
          description: unexpected error
          schema:
            $ref: '#/definitions/Error'

  "/coercion":
    get:
      summary:
      x-oai-controller:
        - file: people
          handler: get
      parameters:
        - name: id
          in: query
          type: number
          required: true
          format: int32
        - name: required
          in: query
          type: boolean
          required: true
        - name: date
          in: query
          type: string
          format: date
          required: true
      responses:
        default:
          description: unexpected error
          schema:
            $ref: '#/definitions/Error'
    post:
      summary:
      x-oai-controller:
        - file: people
          handler: get
      parameters:
        - name: data
          in: body
          type: number
          schema:
            $ref: "#/definitions/Coercion"
      responses:
        default:
          description: unexpected error
          schema:
            $ref: '#/definitions/Error'
  "/crash":
    get:
      summary: Info for a specific pet
      x-oai-controller:
      - file: people
        handler: crash
      tags:
      - pets
      parameters:
        - name: token
          in: header
          type: string
          required: true
          pattern: token.*
          description: token in http header.
      responses:
        200:
          description: unexpected error
          schema:
            "$ref": "#/definitions/Error"

definitions:
  Coercion:
    required:
      - id
      - required
      - date
    properties:
      id:
        type: string
      required:
        type: boolean
      date:
        type: string
        format: date

  User:
    title: äºº
    type: object
    required:
      - name
      - sex
      - height
      - weight
    properties:
      name:
        type: string
      sex:
        type: string
        enum:
          - male
          - female
      height:
        type: integer
        format: int32
        minimum: 10
        maximum: 100
      weight:
        type: number
        format: float
        minimum: 10
        maximum: 100
      mobile:
        type: string
  Error:
    title: Error
    type: object
    required:
      - status
      - error
    properties:
      status:
        type: integer
      type:
        type: string
      path:
        type: string
      error:
        type: string
      detail:
        type: object
