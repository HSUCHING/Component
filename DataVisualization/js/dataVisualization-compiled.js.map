{"version":3,"sources":["dataVisualization.js"],"names":[],"mappings":"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","file":"dataVisualization-compiled.js","sourcesContent":["/**\n * Created by chinghsu on 16/10/21.\n */\nvar heightOffset = document.body.offsetHeight / 2;\nvar widthOffset = document.body.offsetWidth / 2;\nvar rayConfig = {\n    dash: 50\n};\nvar map = new Datamap({\n    scope: 'chn',\n    element: document.getElementById('container'),\n    setProjection: function (element) {\n        var projection = d3.geo.mercator()\n            .center([103.8406920000, 36.0673120000])\n            .rotate([0, 0])\n            .scale(1000)\n            .translate([widthOffset, heightOffset]);\n        var path = d3.geo.path()\n            .projection(projection);\n\n        return {path: path, projection: projection};\n    },\n    fills: {\n        'CNSH': '#2ca02c',\n        'CNJXGZ': '#8c564b',\n        'CNSCCD': '#e377c2',\n        'CNJSXZ': '#ff7f0e',\n        defaultFill: '#0D151F',\n    },\n    geographyConfig: {\n        highlightFillColor: '#000000',\n    },\n    data: {\n        'CNSH': {fillKey: 'CNSH'},\n        'CNJXGZ': {fillKey: 'CNJXGZ'},\n        'CNSCCD': {fillKey: 'CNSCCD'},\n        'CNJSXZ': {fillKey: 'CNJSXZ'}\n    }\n});\n\nvar getX = function (startX, radius, angle) {\n    return startX + (radius * Math.cos(angle));\n};\n\nvar getY = function (startY, radius, angle) {\n    return startY + (radius * Math.sin(angle));\n};\n\nvar generatePentaclePoints = function (x, y, radius, rotation, shape) {\n    var angle, i, j, len, ref, results;\n    if (rotation == null) {\n        rotation = 0;\n    }\n    rotation = (rotation - 18) * Math.PI / 180;\n    var points = [];\n\n    var angle1 = 2 * Math.PI / shape;\n    var angle2 = Math.PI / shape;\n    // var angle2=(shape-2)*Math.PI/shape/2;\n\n    for (var i = 0; i < 2 * shape; i++) {\n        var point = {};\n        angle = i * (Math.PI / shape) + rotation;\n        // point.x = getX(x, (i % 2 == 0) ? radius : (radius * Math.cos(2 * Math.PI / shape) / Math.cos(Math.PI / shape)), angle);\n        point.x = getX(x, (i % 2 == 0) ? radius : (radius * Math.cos(angle1) / Math.cos(angle2)/1), angle);\n        // point.y = getY(y, (i % 2 == 0) ? radius : (radius * Math.cos(2 * Math.PI / shape) / Math.cos(Math.PI / shape)), angle);\n        point.y = getY(y, (i % 2 == 0) ? radius : (radius * Math.cos(angle1) / Math.cos(angle2)/1), angle);\n        points.push(point);\n    }\n\n    points.push(points[0]);\n    return points;\n};\n\n\nvar bombs = [{\n    name: '上海',\n    radius: 10,\n    yield: 400,\n    country: '中国',\n    fillKey: 'CNSH',\n    significance: 'Ethicall医时科技',\n    date: '2016-10-22',\n    latitude: 31.22,\n    longitude: 121.48\n}, {\n    name: '赣州',\n    radius: 20,\n    yield: 400,\n    country: '中国',\n    fillKey: 'CNJXGZ',\n    significance: '江西赣州',\n    date: '2016-10-22',\n    latitude: 25.83,\n    longitude: 114.93\n}, {\n    name: '徐州',\n    radius: 25,\n    yield: 400,\n    country: '中国',\n    fillKey: 'CNJSXZ',\n    significance: '江西赣州',\n    date: '2016-10-22',\n    latitude: 34.21,\n    longitude: 117.29\n}, {\n    name: '成都',\n    radius: 15,\n    yield: 400,\n    country: '中国',\n    fillKey: 'CNSCCD',\n    significance: '江西赣州',\n    date: '2016-10-22',\n    latitude: 30.57,\n    longitude: 104.07\n}];\n\nmap.bubbles(bombs, {\n    popupTemplate: function (geo, data) {\n        return ['<div class=\"hoverinfo\">' + data.name,\n            '<br/>拜访信使数: ' + data.yield + ' 人',\n            '<br/>城市: ' + data.country + '',\n            '<br/>日期: ' + data.date + '',\n            '</div>'].join('');\n    }\n});\n\n\n// var svg = document.querySelector(\"svg\");\n// var coords = [121.48,31.22];\n// var projection = d3.geo.mercator();\n// var xy=projection(coords);\n// d3.select(\"svg\").append(\"circle\").attr({\n//     cx:xy[0],\n//     cy:xy[1],\n//     r:10,\n//     fill:\"red\",\n//     class:\"shanghai\"\n// });\n\n// setTimeout(function(){\n//     var line = d3.select(\"svg\").append(\"line\")\n//         .attr(\"x1\",0)\n//         .attr(\"y1\",0)\n//         .attr(\"x2\",939)\n//         .attr(\"y2\",408)\n//         .attr(\"stroke\",\"red\")\n//         .attr(\"stroke-width\",2)\n//         .attr(\"marker-end\",\"url(#arrow)\");\n//\n// },2000);\nvar lineData = [{\n    \"x\": 0,\n    \"y\": 100\n}, {\n    \"x\": 600,\n    \"y\": 100\n}];\nsetTimeout(function () {\n    // var path = d3.select(\"svg\").append(\"line\")\n    //     .x(function(d){return d.x;})\n    //     .y(function(d){return d.y;})\n    //     .attr(\"stroke\",\"red\")\n    //     .attr(\"stroke-width\",2)\n    //     .attr(\"marker-end\",\"url(#arrow)\");\n    var line = d3.svg.line()\n        .x(function (d) {\n            return d.x;\n        })\n        .y(function (d) {\n            return d.y;\n        }).interpolate(\"linear\");\n    var path = d3.select(\"svg\").append(\"path\")\n        .attr(\"d\", line(lineData))\n        .attr(\"stroke-dasharray\", function () {\n            var dash = rayConfig.dash;\n            var gap = this.getTotalLength();\n            return dash + \" \" + gap;\n        })\n        .attr(\"stroke-dashoffset\", function () {\n            var length = this.getTotalLength();\n            return 0;\n            // return rayConfig.dash;\n        })\n        .attr(\"class\", \"svgRay\")\n        .attr(\"stroke\", \"red\")\n        .attr(\"stroke-width\", 2)\n        .attr(\"fill\", \"red\")\n        .transition()\n        .duration(1000)\n        .ease(\"ease-out\")\n        .attr(\"stroke-dashoffset\", function () {\n            return -this.getTotalLength();\n        })\n        .each(\"end\", function () {\n            console.log(this);\n            d3.select(this).attr(\"d\", line(generatePentaclePoints(600, 100, 50, 0, 5)))\n                .attr(\"stroke-dasharray\", 0)\n                .attr(\"stroke-dashoffset\", 0)\n                .style({\n                    fill: 'none',\n                    stroke: '#FFFFFF',\n                    \"stroke-width\": 1,\n                    \"transform-origin\":\"600px 100px\"\n                });\n                // this.style.transformOrigin=\"600px 100px\";\n                // this.classList.add(\"star\");\n        });\n    // setTimeout(function(){\n    //     line.attr(\"stroke-dashoffset\",function(d){\n    //         return -this.getTotalLength();\n    //     });\n    // },1000);\n\n}, 2000);"]}