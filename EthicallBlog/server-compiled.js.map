{"version":3,"sources":["server.js"],"names":[],"mappings":"AAAA;;;AAGA,IAAI,OAAO,IAAX;;AAEA,IAAI,OAAO,QAAQ,MAAR,CAAX;AACA,IAAI,MAAI,QAAQ,KAAR,CAAR;AACA,IAAI,KAAG,QAAQ,IAAR,CAAP;AACA,IAAI,OAAK,QAAQ,QAAR,EAAkB,KAA3B;AACA,IAAI,OAAK,QAAQ,MAAR,CAAT;;AAEA,IAAI,SAAS,KAAK,YAAL,CAAkB,UAAU,OAAV,EAAmB,QAAnB,EAA6B;AACxD,QAAI,WAAW,IAAI,KAAJ,CAAU,QAAQ,GAAlB,EAAuB,QAAtC;AACA,QAAI,WAAW,KAAK,IAAL,CAAU,QAAV,EAAoB,QAApB,CAAf;AACA;AACA,QAAI,MAAM,KAAK,OAAL,CAAa,QAAb,CAAV;AACA,UAAM,MAAM,IAAI,KAAJ,CAAU,CAAV,CAAN,GAAqB,SAA3B;AACA,OAAG,MAAH,CAAU,QAAV,EAAoB,UAAU,MAAV,EAAkB;AAClC,YAAI,CAAC,MAAL,EAAa;AACT,qBAAS,SAAT,CAAmB,GAAnB,EAAwB;AACpB,gCAAgB;AADI,aAAxB;;AAIA,qBAAS,KAAT,CAAe,sBAAsB,QAAtB,GAAiC,gCAAhD;AACA,qBAAS,GAAT;AACH,SAPD,MAOO;AACH,eAAG,QAAH,CAAY,QAAZ,EAAsB,QAAtB,EAAgC,UAAU,GAAV,EAAe,IAAf,EAAqB;AACjD,oBAAI,GAAJ,EAAS;AACL,6BAAS,SAAT,CAAmB,GAAnB,EAAwB;AACpB,wCAAgB;AADI,qBAAxB;AAGA,6BAAS,GAAT,CAAa,GAAb;AACH,iBALD,MAKO;AACH,wBAAI,cAAc,KAAK,GAAL,KAAa,YAA/B;AACA,6BAAS,SAAT,CAAmB,GAAnB,EAAwB;AACpB,wCAAgB;AADI,qBAAxB;AAGA,6BAAS,KAAT,CAAe,IAAf,EAAqB,QAArB;AACA,6BAAS,GAAT;AACH;AACJ,aAdD;AAeH;AACJ,KAzBD;AA0BH,CAhCY,CAAb;AAiCA,OAAO,MAAP,CAAc,IAAd;AACA,QAAQ,GAAR,CAAY,4BAA4B,IAA5B,GAAmC,GAA/C","file":"server-compiled.js","sourcesContent":["/**\n * Created by chinghsu on 16/6/15.\n */\nvar PORT = 3000;\n\nvar http = require('http');\nvar url=require('url');\nvar fs=require('fs');\nvar mine=require('./mine').types;\nvar path=require('path');\n\nvar server = http.createServer(function (request, response) {\n    var pathname = url.parse(request.url).pathname;\n    var realPath = path.join(\"public\", pathname);\n    //console.log(realPath);\n    var ext = path.extname(realPath);\n    ext = ext ? ext.slice(1) : 'unknown';\n    fs.exists(realPath, function (exists) {\n        if (!exists) {\n            response.writeHead(404, {\n                'Content-Type': 'text/plain'\n            });\n\n            response.write(\"This request URL \" + pathname + \" was not found on this server.\");\n            response.end();\n        } else {\n            fs.readFile(realPath, \"binary\", function (err, file) {\n                if (err) {\n                    response.writeHead(500, {\n                        'Content-Type': 'text/plain'\n                    });\n                    response.end(err);\n                } else {\n                    var contentType = mine[ext] || \"text/plain\";\n                    response.writeHead(200, {\n                        'Content-Type': contentType\n                    });\n                    response.write(file, \"binary\");\n                    response.end();\n                }\n            });\n        }\n    });\n});\nserver.listen(PORT);\nconsole.log(\"Server runing at port: \" + PORT + \".\");\n"]}