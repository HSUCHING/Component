{"version":3,"sources":["server.js"],"names":[],"mappings":"AAAA,IAAI,KAAK,QAAQ,IAAR,CAAT;AACA,IAAI,UAAU,QAAQ,SAAR,CAAd;AACA,IAAI,aAAa,QAAQ,aAAR,CAAjB;AACA,IAAI,MAAM,SAAV;AACA,IAAI,KAAI,QAAQ,QAAR,CAAR;;AAGA,IAAI,GAAJ,CAAQ,WAAW,IAAX,EAAR,E,CAA4B;AAC5B,IAAI,GAAJ,CAAQ,WAAW,UAAX,CAAsB,EAAC,UAAU,IAAX,EAAtB,CAAR,E,CAAkD;AAClD;AACA;;;AAGA,IAAI,IAAJ,CAAS,cAAT,EAAyB,UAAU,GAAV,EAAe,GAAf,EAAoB;AACzC;AACA;AACA;AACA,QAAI,OAAJ,CAAY,CAAC,MAAD,EAAS,MAAT,CAAZ;AACA;AACA;AACA,QAAI,OAAK,GAAG,IAAH,CAAQ,MAAR,CAAT;AACA,QAAI,IAAJ,CAAS,KAAK,SAAL,CAAe,IAAf,CAAT;AACA,OAAG,SAAH,CAAa,YAAY,eAAZ,GAA8B,KAAK,GAAL,EAA9B,GAA2C,OAAxD,EAAiE,KAAK,SAAL,CAAe,IAAf,CAAjE,EAAuF,YAAY;AAC/F,gBAAQ,GAAR,CAAY,oCAAZ;AACH,KAFD;AAGH,CAZD;;AAeA,IAAI,GAAJ,CAAQ,uBAAR,EAAiC,UAAU,GAAV,EAAe,GAAf,EAAoB;AACjD;AACA;AACA,QAAI,OAAJ,CAAY,CAAC,MAAD,EAAS,MAAT,CAAZ;AACA;AACA;AACA,QAAI,OAAK,GAAG,IAAH,EAAT;AACA,QAAI,IAAJ,CAAS,KAAK,SAAL,CAAe,IAAf,CAAT;AACA,OAAG,SAAH,CAAa,YAAY,oBAAZ,GAAmC,KAAK,GAAL,EAAnC,GAAgD,OAA7D,EAAsE,KAAK,SAAL,CAAe,IAAf,CAAtE,EAA4F,YAAY;AACpG,gBAAQ,GAAR,CAAY,kCAAZ;AACH,KAFD;AAGH,CAXD;;AAeA,IAAI,MAAJ,CAAW,IAAX","file":"server-compiled.js","sourcesContent":["var fs = require(\"fs\");\nvar express = require(\"express\");\nvar bodyParser = require('body-parser');\nvar app = express();\nvar gd= require('./data');\n\n\napp.use(bodyParser.json()); // support json encoded bodies\napp.use(bodyParser.urlencoded({extended: true})); // support encoded bodies\n// app.use(express.json()); // support json encoded bodies\n// app.use(express.urlencoded()); // support encoded bodies\n\n\napp.post('/getMockData', function (req, res) {\n    //get Parameter;\n    // console.log(req.is('application/json'));\n    // console.log(req.get('Content-Type'));\n    req.accepts(['json', 'text']);\n    // console.log(req.body.username);\n    // console.log(req.body.psw);\n    var data=gd.mock(format);\n    res.send(JSON.stringify(data));\n    fs.writeFile(__dirname + '/mockDataSet_' + Date.now() + '.json', JSON.stringify(data), function () {\n        console.log(\"bigDataSet generated successfully!\");\n    });\n});\n\n\napp.get('/getMockData/:version', function (req, res) {\n    // console.log(req.is('application/json'));\n    // console.log(req.get('Content-Type'));\n    req.accepts(['json', 'text']);\n    // console.log(req.body.username);\n    // console.log(req.body.psw);\n    var data=gd.mock();\n    res.send(JSON.stringify(data));\n    fs.writeFile(__dirname + '/temp/mockDataSet_' + Date.now() + '.json', JSON.stringify(data), function () {\n        console.log(\"MockData generated successfully!\");\n    });\n});\n\n\n\napp.listen(3000);"]}