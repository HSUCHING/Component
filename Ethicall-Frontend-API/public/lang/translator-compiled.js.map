{"version":3,"sources":["translator.js"],"names":[],"mappings":"AAAA;;AAEA;;;;;;;;;;;;;;AAaA,OAAO,iBAAP,GAA2B;;AAEvB,UAAO,EAFgB;;AAIvB,aAAW,UAAS,GAAT,EAAc;AACvB,QAAI,QAAQ,IAAZ;AACA,UAAM,OAAO,qBAAb;;AAEA,MAAE,GAAF,EAAO,IAAP,CAAY,YAAW;AACrB,QAAE,IAAF,EAAQ,IAAR,CAAa,MAAM,aAAN,CAAoB,EAAE,IAAF,EAAQ,IAAR,EAApB,CAAb;;AAEA,QAAE,IAAF,EAAQ,GAAR,CAAY,MAAM,aAAN,CAAoB,EAAE,IAAF,EAAQ,GAAR,EAApB,CAAZ;AACA,QAAE,IAAF,EAAQ,IAAR,CAAa,OAAb,EAAsB,MAAM,aAAN,CAAoB,EAAE,IAAF,EAAQ,IAAR,CAAa,OAAb,CAApB,CAAtB;AACD,KALD;AAMD,GAdsB;;AAgBvB,iBAAe,UAAS,IAAT,EAAe;AAC5B,WAAO,KAAK,MAAL,CAAY,EAAE,IAAF,CAAO,IAAP,CAAZ,MAA8B,SAA9B,GAA0C,KAAK,MAAL,CAAY,EAAE,IAAF,CAAO,IAAP,CAAZ,CAA1C,GAAsE,IAA7E;AACD,GAlBsB;;AAoBvB,SAAO,UAAS,QAAT,EAAmB;AACxB,SAAK,MAAL,GAAc,QAAd;AACD;AAtBsB,CAA3B","file":"translator-compiled.js","sourcesContent":["'use strict';\n\n/**\n * Translator for documentation pages.\n *\n * To enable translation you should include one of language-files in your index.html\n * after <script src='lang/translator.js' type='text/javascript'></script>.\n * For example - <script src='lang/ru.js' type='text/javascript'></script>\n *\n * If you wish to translate some new texts you should do two things:\n * 1. Add a new phrase pair (\"New Phrase\": \"New Translation\") into your language file (for example lang/ru.js). It will be great if you add it in other language files too.\n * 2. Mark that text it templates this way <anyHtmlTag data-sw-translate>New Phrase</anyHtmlTag> or <anyHtmlTag data-sw-translate value='New Phrase'/>.\n * The main thing here is attribute data-sw-translate. Only inner html, title-attribute and value-attribute are going to translate.\n *\n */\nwindow.SwaggerTranslator = {\n\n    _words:[],\n\n    translate: function(sel) {\n      var $this = this;\n      sel = sel || '[data-sw-translate]';\n\n      $(sel).each(function() {\n        $(this).html($this._tryTranslate($(this).html()));\n\n        $(this).val($this._tryTranslate($(this).val()));\n        $(this).attr('title', $this._tryTranslate($(this).attr('title')));\n      });\n    },\n\n    _tryTranslate: function(word) {\n      return this._words[$.trim(word)] !== undefined ? this._words[$.trim(word)] : word;\n    },\n\n    learn: function(wordsMap) {\n      this._words = wordsMap;\n    }\n};\n"]}